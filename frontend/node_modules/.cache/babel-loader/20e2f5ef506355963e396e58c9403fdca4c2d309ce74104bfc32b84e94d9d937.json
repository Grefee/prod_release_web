{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hujerp\\\\OneDrive - Webasto Group\\\\Dokumenty\\\\GitHub\\\\project_holec\\\\frontend\\\\src\\\\routes\\\\root.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport _ from 'lodash';\nimport Linka from \"./home/Linka.jsx\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getTypyLinek(IP) {\n  const response = await fetch(`http://${IP}:3005/getTypyLinek`);\n  return response.json();\n}\nconst IP = '172.23.30.216';\nconst queryClient = new QueryClient();\nexport default function Home() {\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(MainHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nfunction MainHome() {\n  _s();\n  const {\n    isLoading: reportsLoad,\n    data: typyLinek\n  } = useQuery({\n    queryKey: ['typyLinek'],\n    queryFn: async () => await getTypyLinek(IP),\n    initialData: []\n  });\n  const [selectedLinka, setSelectedLinka] = useState(null);\n  const handleButtonClick = id => {\n    setSelectedLinka(id);\n  };\n  const goToHome = () => {\n    setSelectedLinka(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center w-full\",\n    children: !selectedLinka ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-r from-gray-700 to-gray-500 pt-16 pb-16 pl-8 pr-8 text-3xl w-screen text-center text-white \",\n        children: \"Vyberte Linku\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: typyLinek.map(linka => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pt-5 pb-5 pl-5 pr-5 bg-green-200 w-fit rounded-full mt-5\",\n            id: linka.PLine_id,\n            onClick: () => handleButtonClick(linka.PLine_id),\n            children: [\" \", linka.PLine_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Linka, {\n      apiIP: IP,\n      linkaId: selectedLinka,\n      goToHome: goToHome,\n      typyLinek: typyLinek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(MainHome, \"P5gWDKMoDYc/IDVevicnjyw9ac0=\", false, function () {\n  return [useQuery];\n});\n_c2 = MainHome;\nvar _c, _c2;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"MainHome\");","map":{"version":3,"names":["React","useState","useEffect","_","Linka","QueryClient","QueryClientProvider","useQuery","getTypyLinek","IP","response","fetch","json","queryClient","Home","MainHome","isLoading","reportsLoad","data","typyLinek","queryKey","queryFn","initialData","selectedLinka","setSelectedLinka","handleButtonClick","id","goToHome","map","linka","PLine_id","PLine_name"],"sources":["C:/Users/hujerp/OneDrive - Webasto Group/Dokumenty/GitHub/project_holec/frontend/src/routes/root.jsx"],"sourcesContent":["import React, { useState ,useEffect } from \"react\";\r\nimport _ from 'lodash';\r\nimport Linka from \"./home/Linka.jsx\";\r\n\r\nimport {\r\n  QueryClient,\r\n  QueryClientProvider,\r\n  useQuery,\r\n} from \"@tanstack/react-query\";\r\n\r\n\r\n\r\nasync function getTypyLinek(IP) {\r\n  const response = await fetch(`http://${IP}:3005/getTypyLinek`);\r\n      return response.json();\r\n  }\r\n\r\n\r\nconst IP = '172.23.30.216'\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function Home() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <MainHome />\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\n\r\nfunction MainHome() {\r\n  const {isLoading: reportsLoad, data: typyLinek} = useQuery({queryKey: ['typyLinek'], queryFn: async () => await getTypyLinek(IP), initialData: []});\r\n\r\n    const [selectedLinka, setSelectedLinka] = useState(null);\r\n\r\n    const handleButtonClick = id => {\r\n        setSelectedLinka(id);\r\n      };\r\n\r\n    const goToHome = () => {\r\n    setSelectedLinka(null);\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"flex flex-col items-center w-full\">\r\n            {!selectedLinka ? (\r\n                <div>\r\n                    <div className=\"bg-gradient-to-r from-gray-700 to-gray-500 pt-16 pb-16 pl-8 pr-8 text-3xl w-screen text-center text-white \">Vyberte Linku</div>\r\n                        <div className=\"flex flex-col items-center\">\r\n                        {typyLinek.map((linka) => {\r\n                            return <button className=\"pt-5 pb-5 pl-5 pr-5 bg-green-200 w-fit rounded-full mt-5\" id={linka.PLine_id}  onClick={() => handleButtonClick(linka.PLine_id)}> {linka.PLine_name}</button>\r\n                            \r\n                        })}\r\n                        \r\n                    </div>\r\n                </div>\r\n             ) : (\r\n            <Linka apiIP={IP} linkaId={selectedLinka} goToHome={goToHome} typyLinek={typyLinek} />\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAOC,KAAK,MAAM,kBAAkB;AAEpC,SACEC,WAAW,EACXC,mBAAmB,EACnBC,QAAQ,QACH,uBAAuB;AAAC;AAI/B,eAAeC,YAAY,CAACC,EAAE,EAAE;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASF,EAAG,oBAAmB,CAAC;EAC1D,OAAOC,QAAQ,CAACE,IAAI,EAAE;AAC1B;AAGF,MAAMH,EAAE,GAAG,eAAe;AAE1B,MAAMI,WAAW,GAAG,IAAIR,WAAW,EAAE;AAErC,eAAe,SAASS,IAAI,GAAG;EAC7B,oBACE,QAAC,mBAAmB;IAAC,MAAM,EAAED,WAAY;IAAA,uBACvC,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACQ;AAE1B;AAAC,KANuBC,IAAI;AAS5B,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM;IAACC,SAAS,EAAEC,WAAW;IAAEC,IAAI,EAAEC;EAAS,CAAC,GAAGZ,QAAQ,CAAC;IAACa,QAAQ,EAAE,CAAC,WAAW,CAAC;IAAEC,OAAO,EAAE,YAAY,MAAMb,YAAY,CAACC,EAAE,CAAC;IAAEa,WAAW,EAAE;EAAE,CAAC,CAAC;EAEjJ,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMwB,iBAAiB,GAAGC,EAAE,IAAI;IAC5BF,gBAAgB,CAACE,EAAE,CAAC;EACtB,CAAC;EAEH,MAAMC,QAAQ,GAAG,MAAM;IACvBH,gBAAgB,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBAEI;IAAK,SAAS,EAAC,mCAAmC;IAAA,UAC7C,CAACD,aAAa,gBACX;MAAA,wBACI;QAAK,SAAS,EAAC,4GAA4G;QAAA,UAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAM,eAC3I;QAAK,SAAS,EAAC,4BAA4B;QAAA,UAC1CJ,SAAS,CAACS,GAAG,CAAEC,KAAK,IAAK;UACtB,oBAAO;YAAQ,SAAS,EAAC,0DAA0D;YAAC,EAAE,EAAEA,KAAK,CAACC,QAAS;YAAE,OAAO,EAAE,MAAML,iBAAiB,CAACI,KAAK,CAACC,QAAQ,CAAE;YAAA,WAAC,GAAC,EAACD,KAAK,CAACE,UAAU;UAAA;YAAA;YAAA;YAAA;UAAA,QAAU;QAE3L,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEA;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,gBAEV,QAAC,KAAK;MAAC,KAAK,EAAEtB,EAAG;MAAC,OAAO,EAAEc,aAAc;MAAC,QAAQ,EAAEI,QAAS;MAAC,SAAS,EAAER;IAAU;MAAA;MAAA;MAAA;IAAA;EAClF;IAAA;IAAA;IAAA;EAAA,QACC;AAEd;AAAC,GAhCQJ,QAAQ;EAAA,QACmCR,QAAQ;AAAA;AAAA,MADnDQ,QAAQ;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
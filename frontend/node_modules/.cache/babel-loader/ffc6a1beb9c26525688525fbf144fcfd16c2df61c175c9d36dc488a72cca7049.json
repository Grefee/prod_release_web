{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hujerp\\\\OneDrive - Webasto Group\\\\Dokumenty\\\\GitHub\\\\project_holec\\\\frontend\\\\src\\\\routes\\\\admin\\\\Config.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"@tanstack/react-query\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getOperations(IP, linkaId) {\n  let response = await fetch(`http://${IP}:3005/getOperationsByLineId`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      PLine_id: linkaId\n    })\n  });\n  return response.json();\n}\nasync function getProcesses(IP, linkaId) {\n  let response = await fetch(`http://${IP}:3005/getProcessesByLineId`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      PLine_id: linkaId\n    })\n  });\n  return response.json();\n}\nconst IP = '10.10.195.44';\nfunction AdminConfig() {\n  _s();\n  const {\n    lineId\n  } = useParams();\n  const {\n    isLoading,\n    data: operations,\n    data: processes\n  } = useQuery({\n    queryKey: ['operations'],\n    queryFn: async () => await getOperations(IP, lineId),\n    initialData: []\n  }, {\n    queryKey: ['processes'],\n    queryFn: async () => await getProcesses(IP, lineId),\n    initialData: []\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-slate-300 w-11/12 h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(processes), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl pt-10 pb-10 text-center\",\n        children: linkaName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), operations.map(operation => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white flex flex-col border\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex frex-row mb-5 mt-5 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"bg-slate-200 text-xl p-2 ml-4\",\n              children: operation.Operation_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ml-5 mt-5 rounded-full bg-slate-200 hover:bg-slate-400 p-2\",\n              onClick: () => deleteOperation(operation.Operation_id),\n              children: \"Delete Operation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-5 rounded-3xl p-3 border\",\n            children: [processes.map(processGroup => {\n              const filteredProcesses = processGroup.filter(process => process.Operation_id_Operation === operation.Operation_id);\n              return filteredProcesses.map(process => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full p-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"bg-white text underline underline-offset-4\",\n                    id: process.Process_id,\n                    children: process.Process_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"ml-5\",\n                    children: process.Process_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"ml-5 rounded-full bg-slate-200 hover:bg-slate-400 p-2\",\n                    onClick: () => changeProcess(process.Process_id, process.Process_name, process.Process_type),\n                    children: \"Change\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"ml-5 rounded-full bg-slate-200 hover:bg-slate-400 p-2\",\n                    onClick: () => deleteProcess(process.Process_id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this);\n              });\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ml-5 rounded-full bg-slate-200 hover:bg-slate-400 p-2\",\n              onClick: () => addNewProcess(operation.Operation_id),\n              children: \"+ Add new Process\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-5 pl-5 pb-5 border\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ml-5 rounded-full bg-slate-200 hover:bg-slate-400 p-2\",\n        onClick: () => createNewOperation(linkaId),\n        children: \"+Add new Operation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminConfig, \"PKsuFLJfqWVr+eMoKmH2m3FifS8=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = AdminConfig;\nexport default AdminConfig;\nvar _c;\n$RefreshReg$(_c, \"AdminConfig\");","map":{"version":3,"names":["useEffect","QueryClient","QueryClientProvider","useQuery","useParams","getOperations","IP","linkaId","response","fetch","method","headers","body","JSON","stringify","PLine_id","json","getProcesses","AdminConfig","lineId","isLoading","data","operations","processes","queryKey","queryFn","initialData","console","log","linkaName","map","operation","Operation_name","deleteOperation","Operation_id","processGroup","filteredProcesses","filter","process","Operation_id_Operation","Process_id","Process_name","Process_type","changeProcess","deleteProcess","addNewProcess","createNewOperation"],"sources":["C:/Users/hujerp/OneDrive - Webasto Group/Dokumenty/GitHub/project_holec/frontend/src/routes/admin/Config.jsx"],"sourcesContent":["import { useEffect } from \"react\"\r\nimport {\r\n    QueryClient,\r\n    QueryClientProvider,\r\n    useQuery,\r\n  } from \"@tanstack/react-query\";\r\n\r\n  import { useParams } from 'react-router-dom';\r\n\r\n\r\nasync function getOperations(IP, linkaId){\r\n    let response = await fetch(`http://${IP}:3005/getOperationsByLineId`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            PLine_id: linkaId,\r\n        }),   \r\n    })\r\n    return response.json();\r\n}\r\nasync function getProcesses(IP, linkaId){\r\n    let response = await fetch(`http://${IP}:3005/getProcessesByLineId`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            PLine_id: linkaId,\r\n        }),   \r\n    })\r\n    return response.json();\r\n}\r\n\r\nconst IP = '10.10.195.44'\r\n\r\nfunction AdminConfig() {\r\n\r\n\r\n    const { lineId } = useParams();\r\n    const {isLoading, data: operations, data: processes} = useQuery({queryKey: ['operations'], queryFn: async () => await getOperations(IP, lineId), initialData: []},\r\n             {queryKey: ['processes'], queryFn: async () => await getProcesses(IP, lineId), initialData: []});  \r\n    \r\nif (isLoading) {\r\n    return <span>Loading...</span>\r\n    }    \r\n\r\n\r\n    return (        \r\n        <div className=\"bg-slate-300 w-11/12 h-full flex flex-col\">\r\n            <div>\r\n                {console.log(processes)}\r\n                <h1 className=\"text-3xl pt-10 pb-10 text-center\">{linkaName}</h1>\r\n            </div>\r\n            {operations.map((operation) => {\r\n                return (\r\n                    <div className=\"bg-white flex flex-col border\">\r\n                        <div className=\"flex frex-row mb-5 mt-5 items-center\">\r\n                            <div className=\"bg-white\">\r\n                                <p className=\"bg-slate-200 text-xl p-2 ml-4\">{operation.Operation_name}</p>\r\n                                <button className=\"ml-5 mt-5 rounded-full bg-slate-200 hover:bg-slate-400 p-2\" onClick={() => deleteOperation(operation.Operation_id)}>Delete Operation</button>\r\n                            </div>\r\n                            <div className=\"ml-5 rounded-3xl p-3 border\">\r\n                                {processes.map((processGroup) => {\r\n                                const filteredProcesses = processGroup.filter((process) => process.Operation_id_Operation === operation.Operation_id);\r\n                                return filteredProcesses.map((process) => {\r\n                                    return (\r\n                                    <div className=\"w-full p-2\">\r\n                                        <a className=\"bg-white text underline underline-offset-4\" id={process.Process_id}>{process.Process_name}</a>\r\n                                        <a className=\"ml-5\">{process.Process_type}</a>\r\n                                        <button className=\"ml-5 rounded-full bg-slate-200 hover:bg-slate-400 p-2\" onClick={() => changeProcess(process.Process_id, process.Process_name, process.Process_type)}>Change</button>\r\n                                        <button className=\"ml-5 rounded-full bg-slate-200 hover:bg-slate-400 p-2\" onClick={() => deleteProcess(process.Process_id)}>Delete</button>\r\n                                    </div>\r\n                                    );\r\n                                });\r\n                                })}\r\n                                <button className=\"ml-5 rounded-full bg-slate-200 hover:bg-slate-400 p-2\" onClick={() => addNewProcess(operation.Operation_id)}>+ Add new Process</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n                })}\r\n            <div className=\"pt-5 pl-5 pb-5 border\">\r\n                <button className=\"ml-5 rounded-full bg-slate-200 hover:bg-slate-400 p-2\" onClick={() => createNewOperation(linkaId)}>+Add new Operation</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default AdminConfig;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}